{"changed":true,"filter":false,"title":"Untitled.js","tooltip":"/Assignment4/Untitled.js","value":"const { Client } = require('pg');\nvar fs = require('fs');\nvar async = require(\"async\");\n\n\nvar db_credentials = new Object();\ndb_credentials.user = 'gusdud0222';\ndb_credentials.host = 'gusdud0222.c51cwg6egxtj.ap-southeast-1.rds.amazonaws.com';\ndb_credentials.database = 'gusdud0222';\ndb_credentials.password = 'vmflsxj1';\ndb_credentials.port = 5432;\n\n\nconst client = new Client(db_credentials);\nclient.connect();\n\n\n\nvar addressesForDb = []\nvar content = fs.readFileSync('first.json');\nvar parsedJSON = JSON.parse(content);\n\nfor (var i = 0; i < 4; i++) {\n    var address = parsedJSON[i].InputAddress.StreetAddress\n    var real = new Object();\n    real.address = address;\n    real.latLong = { lat: parsedJSON[i].OutputGeocodes[0].OutputGeocode.Latitude, lng: parsedJSON[i].OutputGeocodes[0].OutputGeocode.Latitude }\n    addressesForDb[i] = real;\n}\n\nvar thisQuery;\n\n\n//테이블생성  : 처음에 해야할일\n/*\nthisQuery = \"CREATE TABLE aalocations (address varchar(100), lat double precision, long double precision);\";\nclient.query(thisQuery, (err, res) => {\n    console.log(err, res);\n    client.end();\n});\n*/\n\n//테이블에 값 넣기 : 2번째 해야할일 ( 테이블을 생성후에 값들을 넣어야함 예를들면 한글에서 표를 만들고 그안에 글을쓰는것)\n/*\nasync.eachSeries(addressesForDb, function(value, callback) {\n    const client = new Client(db_credentials);\n    client.connect();\n    var thisQuery = \"INSERT INTO aalocations VALUES (E'\" + value.address + \"', \" + value.latLong.lat + \", \" + value.latLong.lng + \");\";\n    client.query(thisQuery, (err, res) => {\n        console.log(err, res);\n        client.end();\n    });\n    setTimeout(callback, 1000); \n});\n*/\n\n//값이 제대로 들어갔는지 확인하기\n/*\nthisQuery = \"SELECT * FROM aalocations;\";\nclient.query(thisQuery, (err, res) => {\n    console.log(err, res);\n    client.end();\n});\n*/\n\n//테이블 삭제\n/*\nthisQuery = \"DROP TABLE aalocations;\"; \nclient.query(thisQuery, (err, res) => {\n    console.log(err, res);\n    client.end();\n});\n*/","undoManager":{"mark":-2,"position":6,"stack":[[{"start":{"row":0,"column":0},"end":{"row":72,"column":2},"action":"insert","lines":["const { Client } = require('pg');","var fs = require('fs');","var async = require(\"async\");","","","var db_credentials = new Object();","db_credentials.user = 'gusdud0222';","db_credentials.host = 'gusdud0222.c51cwg6egxtj.ap-southeast-1.rds.amazonaws.com';","db_credentials.database = 'gusdud0222';","db_credentials.password = 'vmflsxj1';","db_credentials.port = 5432;","","","const client = new Client(db_credentials);","client.connect();","","","","var addressesForDb = []","var content = fs.readFileSync('first.json');","var parsedJSON = JSON.parse(content);","","for (var i = 0; i < 4; i++) {","    var address = parsedJSON[i].InputAddress.StreetAddress","    var real = new Object();","    real.address = address;","    real.latLong = { lat: parsedJSON[i].OutputGeocodes[0].OutputGeocode.Latitude, lng: parsedJSON[i].OutputGeocodes[0].OutputGeocode.Latitude }","    addressesForDb[i] = real;","}","","var thisQuery;","","","//테이블생성  : 처음에 해야할일","/*","thisQuery = \"CREATE TABLE aalocations (address varchar(100), lat double precision, long double precision);\";","client.query(thisQuery, (err, res) => {","    console.log(err, res);","    client.end();","});","*/","","//테이블에 값 넣기 : 2번째 해야할일 ( 테이블을 생성후에 값들을 넣어야함 예를들면 한글에서 표를 만들고 그안에 글을쓰는것)","/*","async.eachSeries(addressesForDb, function(value, callback) {","    const client = new Client(db_credentials);","    client.connect();","    var thisQuery = \"INSERT INTO aalocations VALUES (E'\" + value.address + \"', \" + value.latLong.lat + \", \" + value.latLong.lng + \");\";","    client.query(thisQuery, (err, res) => {","        console.log(err, res);","        client.end();","    });","    setTimeout(callback, 1000); ","});","*/","","//값이 제대로 들어갔는지 확인하기","/*","thisQuery = \"SELECT * FROM aalocations;\";","client.query(thisQuery, (err, res) => {","    console.log(err, res);","    client.end();","});","*/","","//테이블 삭제","/*","thisQuery = \"DROP TABLE aalocations;\"; ","client.query(thisQuery, (err, res) => {","    console.log(err, res);","    client.end();","});","*/"],"id":1}],[{"start":{"row":72,"column":2},"end":{"row":72,"column":3},"action":"insert","lines":["g"],"id":2},{"start":{"row":72,"column":3},"end":{"row":72,"column":4},"action":"insert","lines":["d"]},{"start":{"row":72,"column":4},"end":{"row":72,"column":5},"action":"insert","lines":["g"]},{"start":{"row":72,"column":5},"end":{"row":72,"column":6},"action":"insert","lines":["d"]}],[{"start":{"row":72,"column":5},"end":{"row":72,"column":6},"action":"remove","lines":["d"],"id":3},{"start":{"row":72,"column":4},"end":{"row":72,"column":5},"action":"remove","lines":["g"]},{"start":{"row":72,"column":3},"end":{"row":72,"column":4},"action":"remove","lines":["d"]},{"start":{"row":72,"column":2},"end":{"row":72,"column":3},"action":"remove","lines":["g"]},{"start":{"row":72,"column":1},"end":{"row":72,"column":2},"action":"remove","lines":["/"]}],[{"start":{"row":72,"column":1},"end":{"row":72,"column":2},"action":"insert","lines":["/"],"id":4},{"start":{"row":72,"column":2},"end":{"row":72,"column":3},"action":"insert","lines":["h"]},{"start":{"row":72,"column":3},"end":{"row":72,"column":4},"action":"insert","lines":["i"]},{"start":{"row":72,"column":4},"end":{"row":72,"column":5},"action":"insert","lines":["h"]},{"start":{"row":72,"column":5},"end":{"row":72,"column":6},"action":"insert","lines":["i"]}],[{"start":{"row":72,"column":6},"end":{"row":72,"column":7},"action":"insert","lines":["h"],"id":5},{"start":{"row":72,"column":7},"end":{"row":72,"column":8},"action":"insert","lines":["i"]}],[{"start":{"row":72,"column":7},"end":{"row":72,"column":8},"action":"remove","lines":["i"],"id":6},{"start":{"row":72,"column":6},"end":{"row":72,"column":7},"action":"remove","lines":["h"]},{"start":{"row":72,"column":5},"end":{"row":72,"column":6},"action":"remove","lines":["i"]},{"start":{"row":72,"column":4},"end":{"row":72,"column":5},"action":"remove","lines":["h"]},{"start":{"row":72,"column":3},"end":{"row":72,"column":4},"action":"remove","lines":["i"]}],[{"start":{"row":72,"column":2},"end":{"row":72,"column":3},"action":"remove","lines":["h"],"id":7}]]},"ace":{"folds":[],"scrolltop":923.5,"scrollleft":0,"selection":{"start":{"row":72,"column":2},"end":{"row":72,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1538799848616}